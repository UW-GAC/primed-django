# Generated by Django 3.2.16 on 2023-03-29 22:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('duo', '0001_initial'),
        ('anvil_consortium_manager', '0008_workspace_is_locked'),
        ('primed_anvil', '0005_availabledata'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CDSA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('cc_id', models.IntegerField(help_text='Identifier assigned by the CC.', unique=True)),
                ('instutition', models.CharField(help_text='Signing institution for the CDSA.', max_length=255)),
                ('group', models.CharField(help_text='Study site, study, or center that the CDSA is associated with.', max_length=255)),
                ('type', models.CharField(choices=[('member', 'Member'), ('data_affiliate', 'Data affiliate'), ('non_data_affiliate', 'Non-data affiliate')], max_length=31, verbose_name='CDSA type')),
                ('is_component', models.BooleanField(help_text='Indicator of whether the CDSA is a component of another group.')),
                ('representatitive_role', models.CharField(help_text="Representative's role in the group.", max_length=255)),
                ('anvil_access_group', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='anvil_consortium_manager.managedgroup', verbose_name=' AnVIL access group')),
                ('representative', models.ForeignKey(help_text='The investigator who signed this CDSA.', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalCDSAWorkspace',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('disease_term', models.CharField(blank=True, help_text='The disease term if required by data_use_permission.', max_length=255, null=True, verbose_name='DUO disease term')),
                ('data_use_limitations', models.TextField()),
                ('acknowledgments', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cdsa', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cdsa.cdsa')),
                ('data_use_permission', models.ForeignKey(blank=True, db_constraint=False, help_text='The DataUsePermission associated with this study-consent group.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='duo.datausepermission', verbose_name='DUO data use permission')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(blank=True, db_constraint=False, help_text='The user who requested creation.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('study', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='primed_anvil.study')),
                ('workspace', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='anvil_consortium_manager.workspace')),
            ],
            options={
                'verbose_name': 'historical cdsa workspace',
                'verbose_name_plural': 'historical cdsa workspaces',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CDSAWorkspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('disease_term', models.CharField(blank=True, help_text='The disease term if required by data_use_permission.', max_length=255, null=True, verbose_name='DUO disease term')),
                ('data_use_limitations', models.TextField()),
                ('acknowledgments', models.TextField()),
                ('available_data', models.ManyToManyField(blank=True, help_text='Data available in this accession.', to='primed_anvil.AvailableData')),
                ('cdsa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cdsa.cdsa')),
                ('data_use_modifiers', models.ManyToManyField(blank=True, help_text='The DataUseModifiers associated with this study-consent group.', to='duo.DataUseModifier', verbose_name='DUO data use modifiers')),
                ('data_use_permission', models.ForeignKey(blank=True, help_text='The DataUsePermission associated with this study-consent group.', null=True, on_delete=django.db.models.deletion.PROTECT, to='duo.datausepermission', verbose_name='DUO data use permission')),
                ('requested_by', models.ForeignKey(help_text='The user who requested creation.', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='primed_anvil.study')),
                ('workspace', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='anvil_consortium_manager.workspace')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
