name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "main" ]
    paths-ignore: [ "docs/**" ]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt

      # Run all pre-commit hooks on all the files.
      # Getting only staged files can be tricky in case a new PR is opened
      # since the action is run on a branch in detached head state
      - name: Install and Run Pre-commit
        uses: pre-commit/action@v2.0.3

  pytest:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        # While we are only running for a single version
        # ahead of planned upgrades we can add versions as
        # needed
        python-version: [3.8]
        mariadb-version: ["10.3"]

    services:
      mysql:
        image: mariadb:${{ matrix.mariadb-version }}
        ports:
          - 3306:3306
        env:
          MYSQL_PASSWORD: mysql
          MYSQL_ROOT_PASSWORD: root
          
    env:
      # mysql://user:password@host:port/database
      DATABASE_URL: "mysql://root:root@127.0.0.1:3306/mysql"

    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/local.txt

      - name: Test with pytest
        run:  pytest
        env:
          # We can set this to an empty string, since we'll never make an API call.
          ANVIL_API_SERVICE_ACCOUNT_FILE: foo
